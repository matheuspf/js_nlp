cmake_minimum_required(VERSION 3.5)

set(lib_name js_nlp)

string(TOUPPER ${lib_name} lib_name_upper)

### So we can install without building everything (docs, examples and tests)
set(CMAKE_SKIP_INSTALL_ALL_DEPENDENCY TRUE)


### Create the project with the given version
project(${lib_name} VERSION 1.0.0 LANGUAGES CXX)


### Options
option(${lib_name}_BuildTests "If the unit test will be generated by cmake" OFF)

option(${lib_name}_BuildExamples "If the examples will be generated by cmake" OFF)

option(${lib_name}_BuildDocs "If the docs will be generated by cmake" OFF)
###



### Add library
add_executable(${lib_name})

target_include_directories(${lib_name} PUBLIC include/js_nlp external/nlpp/include /usr/local/include)

target_sources(${lib_name} PRIVATE src/GradientDescent/GradientDescent.cpp src/Helpers/Helpers.cpp
                                   src/Helpers/JS_Function.cpp src/LineSearch/Dynamic/Dynamic.cpp
                                   src/QuasiNewton/LBFGS/LBFGS.cpp
)

target_compile_options(${lib_name} PUBLIC -std=c++1z -O3 -s WASM=1 -DNDEBUG)

target_link_libraries(${lib_name} PUBLIC --bind)
###


if(${lib_name}_BuildTests)
    add_subdirectory(tests)
endif()

if(${lib_name}_BuildExamples)
    add_subdirectory(examples)
endif()

if(${lib_name}_BuildDocs)
    add_subdirectory(doc)
endif()